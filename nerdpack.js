module.exports=function(e){var t={};function i(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,i),a.l=!0,a.exports}return i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)i.d(r,a,function(t){return e[t]}.bind(null,a));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=47)}([function(e){e.exports={$id:"action-categories",$schema:"http://json-schema.org/draft-07/schema#",title:"Action Categories",description:"Available action categories.",type:"string",enum:["advanced","beta","monitor","other","related-items","reports","troubleshoot","nr-only"]}},function(e){e.exports={$id:"artifact-id",$schema:"http://json-schema.org/draft-07/schema#",title:"Artifact id",type:"string",pattern:"^[a-z][a-z0-9-]+$",description:"The unique identifier for an artifact without the package id. It has to be unique. It must be lowercase, start with a letter, and only contain alphabetic characters, numbers and hyphens ^[a-z][a-z0-9-]+$. This should not contain the package id.",errorMessage:"The id must be lowercase, start with a letter and can only contain alphabetic characters, numbers and hyphens. E.g: my-nerdlet-id. Should match the regular expression: ^[a-z0-9-]+$"}},function(e){e.exports={$id:"full-artifact-id",$schema:"http://json-schema.org/draft-07/schema#",title:"Artifact id",type:"string",pattern:"^([a-z0-9]+[a-z0-9-]*)\\.([a-z0-9]+[a-z0-9-]*)$",description:"The full unique identifier (package id included) for an artifact. It must be lowercase, and only contain alphabetic characters, numbers, hyphens and a dot between the package id and the artifact id (^([a-z0-9]+[a-z0-9-]*)\\.([a-z0-9]+[a-z0-9-]*)$).",errorMessage:"The id must be lowercase, and can only contain alphabetic characters, numbers, hyphens and a dot between the package id and the artifact id. For example: 'example-package.my-nerdlet-id'. It should match the regular expression: ^([a-z0-9]+[a-z0-9-]*)\\.([a-z0-9]+[a-z0-9-]*)$"}},function(e){e.exports={$id:"context-id-matcher",$schema:"http://json-schema.org/draft-07/schema#",title:"Context id matcher",type:"string",pattern:"^!?([a-z0-9]+[a-z0-9-]*)\\.([a-z0-9]+[a-z0-9-]*)$",description:"The full unique identifier (package id included) for an artifact. This is used as a filter in the context. The id can be negated using the ! symbol.",errorMessage:"The id must be lowercase, and can only contain alphabetic characters, numbers, hyphens and a dot between the package id and the artifact id. For example: 'example-package.my-nerdlet-id'. It is possible to negate the value using the '!' symbol. E.g: '!example-package.my-nerdlet-id'. It should match the regular expression: ^!?([a-z0-9]+[a-z0-9-]*)\\.([a-z0-9]+[a-z0-9-]*)$"}},function(e){e.exports={$id:"entity-guid-domain",$schema:"http://json-schema.org/draft-07/schema#",title:"Entity GUID domain",type:"string",pattern:"^[A-Z0-9_]+$",description:"The entity GUID domain. It can only contain uppercase alphabetic characters, numbers and underscores (^[A-Z0-9_]+$).",errorMessage:"The entity domain should contain only uppercase alphabetic characters, numbers or underscores. Should match the regular expression: ^[A-Z0-9_]+$"}},function(e){e.exports={$id:"entity-guid-domain-matcher",$schema:"http://json-schema.org/draft-07/schema#",title:"Entity GUID domain",type:"string",pattern:"^!?[A-Z0-9_]+$",description:"The entity GUID domain. It can only contain uppercase alphabetic characters, numbers and underscores (^!?[A-Z0-9_]+$). It is possible to negate the value using the '!' symbol. For example: '!APM'.",errorMessage:"The entity domain should contain only uppercase alphabetic characters, numbers or underscores. It is possible to negate the value using the '!' symbol. For example: '!APM'. Should match the regular expression: ^!?[A-Z0-9_]+$"}},function(e){e.exports={$id:"entity-guid-type",$schema:"http://json-schema.org/draft-07/schema#",title:"Entity GUID type",type:"string",pattern:"^[A-Z0-9_]+$",description:"The entity GUID type. It can only contain uppercase alphabetic characters, numbers and underscores (^[A-Z0-9_]+$).",errorMessage:"The entity type should contain only uppercase alphabetic characters, numbers or underscores. Should match the regular expression: ^[A-Z0-9_]+$"}},function(e){e.exports={$id:"entity-guid-type-matcher",$schema:"http://json-schema.org/draft-07/schema#",title:"Entity GUID type",type:"string",pattern:"^!?[A-Z0-9_]+$",description:"The entity GUID type. It can only contain uppercase alphabetic characters, numbers and underscores (^!?[A-Z0-9_]+$). It is possible to negate the value using the '!' symbol. For example: '!APPLICATION'.",errorMessage:"The entity type should contain only uppercase alphabetic characters, numbers or underscores. It is possible to negate the value using the '!' symbol. For example: '!APPLICATION'. Should match the regular expression: ^!?[A-Z0-9_]+$"}},,,,,,,function(e){e.exports={$id:"entity-categories",$schema:"http://json-schema.org/draft-07/schema#",title:"Entity Categories",description:"Available entity categories.",type:"string",enum:["Interests","Your system","AWS","Azure","GCP","On host integrations","Network","Kubernetes","Synthetics","Machine learning"]}},function(e){e.exports={$id:"entities-matcher",$schema:"http://json-schema.org/draft-07/schema#",title:"Entities Matcher",description:"Entities structure.",type:"array",items:{type:"object",properties:{domain:{type:"string"},type:{type:"string"},tags:{type:"array",items:{type:"object",properties:{key:{type:"string"},values:{type:"array",items:{type:"string"}}},additionalProperties:!1,additionalItems:!0},description:"Tags is an array of objects, that matches following structure { key: 'foo', values: ['bar', 'baz'] }",errorMessage:"Tags can only contain this structure ie: { key: <string>, values: Array<string> }"}}}}},,,,,,function(e){e.exports={$id:"nerdpack-id",$schema:"http://json-schema.org/draft-07/schema#",title:"Nerdpack id",type:"string",pattern:"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",description:"The universal unique identifier (UUID) for a Nerdpack. This should be created and managed by the NR1 CLI.",errorMessage:"The ID of your nerdpack is not a valid UUID."}},function(e){e.exports={$id:"visualization-field",$schema:"http://json-schema.org/draft-07/schema#",description:"Visualization Field",type:"object",properties:{name:{description:"Name of the JavaScript key for the object.",type:"string"},title:{description:"Title of the field, as expected to be shown in UI.",type:"string"},description:{description:"Short sentence describing what the field is used for.",type:"string"},type:{description:"Expected type value supported.",type:"string",enum:["boolean","number","string","enum","json","nrql","account-id","series-name","color"]},min:{description:"Minimum number supported.",type:"number"},max:{description:"Maximum number supported.",type:"number"},required:{description:"If enabled, a value MUST be provided for this field",type:"boolean"},default:{description:"Default value of the field",type:["number","string","boolean","object","array","null"]},step:{description:"Step for numbers (increment or decrement).",type:"number"},items:{description:"List of enum properties.",type:"array",items:{type:"object",properties:{title:{description:"Title of the enumerated property, as expected to be shown in UI.",type:"string"},value:{description:"Value the field will acquire when the enumerated is selected.",type:["number","string","boolean","object","array","null"]}}}}},additionalProperties:!1}},function(e){e.exports={$id:"visualization-collection",$schema:"http://json-schema.org/draft-07/schema#",description:"Visualization Collection",type:"object",properties:{name:{description:"Name of the JavaScript key for the object.",type:"string"},title:{description:"Title of the collection, as expected to be shown in UI.",type:"string"},description:{description:"Short sentence describing what the collection is used for.",type:"string"},type:{type:"string",const:"collection"},items:{description:"List of fields, collections or namespaces.",type:"array",items:{oneOf:[{$ref:"visualization-namespace"},{$ref:"visualization-collection"},{$ref:"visualization-field"}]}}},additionalProperties:!1}},function(e){e.exports={$id:"visualization-namespace",$schema:"http://json-schema.org/draft-07/schema#",description:"Visualization Namespace",type:"object",properties:{name:{description:"Name of the JavaScript key for the object.",type:"string"},title:{description:"Title of the namespace, as expected to be shown in UI.",type:"string"},description:{description:"Short sentence describing what the namespace is used for.",type:"string"},type:{type:"string",const:"namespace"},items:{description:"List of fields, collections or namespaces.",type:"array",items:{oneOf:[{$ref:"visualization-namespace"},{$ref:"visualization-collection"},{$ref:"visualization-field"}]}}},additionalProperties:!1}},function(e){e.exports={$id:"visualization-schema",$schema:"http://json-schema.org/draft-07/schema#",description:"Visualization Schema",type:"object",properties:{id:{description:"Inherited from common artifact schema",type:"string"},deprecatedIds:{description:"Inherited from common artifact schema",type:"array"},schemaType:{description:"Inherited from common artifact schema",type:"string"},displayName:{description:"Inherited from common artifact schema",type:"string"},description:{description:"Inherited from common artifact schema",type:"string"},tessen:{description:"The tessen configuration for this artifact.",type:"object",properties:{product:{description:"Three or four letter identifier of the product line (e.g. PLTF for Platform Accounts).",type:"string"},subproduct:{description:"Three or four letter identifier of the sub-product line (e.g. DASH for Custom Dashboards).",type:"string"}}},configuration:{description:"List of fields, collections or namspaces.",type:"array",items:{oneOf:[{$ref:"visualization-namespace"},{$ref:"visualization-collection"},{$ref:"visualization-field"}]}}},additionalProperties:!1}},,,,,,,,,,,,,,,,,,,,,,function(e,t,i){e.exports={definitions:i(48),schemas:i(50)}},function(e,t,i){e.exports=[i(22),i(23),i(24),i(21),i(14),i(15),i(0),i(1),i(2),i(3),i(4),i(5),i(6),i(7),i(49)]},function(e){e.exports={$id:"schema-types",$schema:"http://json-schema.org/draft-07/schema#",title:"Schema Types",description:"Available schema types.",type:"string",enum:["LAUNCHER","NERDLET","NERDPACK","VISUALIZATION"]}},function(e,t,i){const r=i(51),a=i(52),n=i(53),s=i(54),o=i(25);e.exports=[r,a,n,s,o]},function(e){e.exports={$id:"artifact-schema",$schema:"http://json-schema.org/draft-07/schema#",title:"Artifact schema",description:"Common attributes shared between all the schemas.",type:"object",properties:{id:{$ref:"artifact-id"},schemaType:{description:"Informs what kind of artifact are we defining.",$ref:"schema-types"},displayName:{description:"The name of the artifact implementation in a human-readable format.",type:"string"},description:{type:"string",description:"The description of the artifact. This could could be also used for documentation or search purposes.",errorMessage:"This is required."}},required:["description","displayName","id","schemaType"]}},function(e){e.exports={$id:"launcher-schema",$schema:"http://json-schema.org/draft-07/schema#",description:"Launcher Schema",type:"object",properties:{id:{description:"Inherited from common artifact schema",type:"string"},schemaType:{description:"Inherited from common artifact schema",type:"string"},displayName:{description:"Inherited from common artifact schema",type:"string"},description:{description:"Inherited from common artifact schema",type:"string"},rootNerdletId:{description:"The id of the Nerdlet to be rendered in the first pane when the Launcher is initially rendered. You can also override the defaultState and config of the Nerdlet.",type:"string"},context:{type:"object",properties:{entityTypes:{description:"Only entity types in the following list are able to be shown in this launcher.",type:"array",items:{oneOf:[{$ref:"entity-guid-type-matcher"},{type:"object",properties:{domain:{$ref:"entity-guid-domain-matcher"},type:{$ref:"entity-guid-type-matcher"}},additionalProperties:!1}]}}}}},additionalProperties:!1,required:["rootNerdletId"]}},function(e){e.exports={$id:"nerdlet-schema",$schema:"http://json-schema.org/draft-07/schema#",description:"Nerdlet Schema",type:"object",properties:{id:{description:"Inherited from common artifact schema",type:"string"},schemaType:{description:"Inherited from common artifact schema",type:"string"},displayName:{description:"Inherited from common artifact schema",type:"string"},description:{description:"Inherited from common artifact schema",type:"string"},entities:{description:"[DEPRECATED] Use context.entities instead. An array of entity types on which this nerdlet operates. It also accepts ['*'], which means it operates on all existing entity types.",type:"array",items:{oneOf:[{$ref:"entity-guid-type-matcher"},{type:"string",const:"*"},{type:"object",properties:{domain:{$ref:"entity-guid-domain-matcher"},type:{$ref:"entity-guid-type-matcher"}},additionalProperties:!1}]}},actionCategory:{description:"The category to which the nerdlet belongs to. If this value is provided, it means the Nerdlet can behave as an action (it can operate on an entity and it will appear listed in the Actions Pane)",$ref:"action-categories"},context:{type:"object",properties:{entities:{description:"An array of entities on which this nerdlet operates. It also accepts [{}], which means it operates on all existing entities.",$ref:"entities-matcher"}}}},additionalProperties:!1}},function(e){e.exports={$id:"nerdpack-schema",$schema:"http://json-schema.org/draft-07/schema#",description:"Nerdpack Schema version 3",type:"object",properties:{id:{$ref:"nerdpack-id"},schemaType:{description:"Informs what kind of schema are we defining.",type:"string"},displayName:{description:"The name of the Nerdpack in a human-readable format.",type:"string"},description:{description:"The description of the Nerdpack.",type:"string"},repositoryUrl:{description:"The URL of the repository containing this Nerdpack.",type:"string"}},additionalProperties:!1,required:["id","schemaType","displayName","description"]}}]);